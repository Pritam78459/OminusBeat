[{"/home/sh1n0b1/OminusBeat/frontend/gui/src/index.js":"1","/home/sh1n0b1/OminusBeat/frontend/gui/src/App.js":"2","/home/sh1n0b1/OminusBeat/frontend/gui/src/reportWebVitals.js":"3","/home/sh1n0b1/OminusBeat/frontend/gui/src/containers/Layout.js":"4","/home/sh1n0b1/OminusBeat/frontend/gui/src/containers/OminusBeatMusic.js":"5","/home/sh1n0b1/OminusBeat/frontend/gui/src/components/OminusBeat.js":"6","/home/sh1n0b1/OminusBeat/frontend/gui/src/components/tileData.js":"7","/home/sh1n0b1/OminusBeat/frontend/gui/src/routes.js":"8","/home/sh1n0b1/OminusBeat/frontend/gui/src/components/Player.js":"9"},{"size":500,"mtime":1610594479927,"results":"10","hashOfConfig":"11"},{"size":354,"mtime":1610682099974,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1610594479927,"results":"13","hashOfConfig":"11"},{"size":0,"mtime":1610606090691,"results":"14","hashOfConfig":"11"},{"size":2845,"mtime":1610684611528,"results":"15","hashOfConfig":"11"},{"size":3884,"mtime":1610680442325,"results":"16","hashOfConfig":"11"},{"size":1153,"mtime":1610619552983,"results":"17","hashOfConfig":"11"},{"size":339,"mtime":1610612334441,"results":"18","hashOfConfig":"11"},{"size":1110,"mtime":1610680379755,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1twd5tu",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"/home/sh1n0b1/OminusBeat/frontend/gui/src/index.js",[],["43","44"],"/home/sh1n0b1/OminusBeat/frontend/gui/src/App.js",["45","46"],"import logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nimport MusicList from './containers/OminusBeatMusic';\nimport BaseRouter from './routes';\n\n\nfunction App() {\n\n  \n\n  return (\n    <div className=\"App\">\n      <Router>\n        <BaseRouter/>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/home/sh1n0b1/OminusBeat/frontend/gui/src/reportWebVitals.js",[],"/home/sh1n0b1/OminusBeat/frontend/gui/src/containers/Layout.js",[],"/home/sh1n0b1/OminusBeat/frontend/gui/src/containers/OminusBeatMusic.js",["47","48","49"],"/home/sh1n0b1/OminusBeat/frontend/gui/src/components/OminusBeat.js",["50","51","52","53","54"],"import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport './OminusBeat.css';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport tileData from './tileData';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport divider from './images/divider2.png';\nimport stripbg from './images/stripbg';\nimport Typography from '@material-ui/core/Typography';\nimport titleimg from './images/title.png';\nimport * as $ from \"jquery\";\nimport Player from \"./Player\";\nimport Component from 'react';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    \n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    opacity:\"100%\",\n    backgroundColor:'grey',\n  },\n  tabs_style: {\n      textColor:\"white\",\n      color:\"white\",\n      fontSize:130\n      \n  },\n  tab_style: {\n      textColor:'grey'\n  },\n\n  gridList: {\n    width: 600,\n    height: 450,\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n  text: {\n      color:\"white\"\n  },\n  paperContainer: {\n        backgroundImage: `url(${stripbg})`,\n        backgroundSize:'cover',\n        height:650\n        \n        \n        \n},\ngrids : {\n   width: 600,\n    height: 450, \n}\n\n}));\n\n\nexport default function DisabledTabs() {\n    const classes = useStyles();\n  const [value, setValue] = React.useState(2);\n  const primary = grey[50];\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n      <Grid container spacing = {10} align=\"center\" >\n        <Grid item xs = {12}  >\n    \n      <Tabs \n        value={value}\n        onChange={handleChange}\n        className={classes.tabs_style}\n        style={{marginLeft:\"37%\"}}\n        \n      >\n        <Tab label=\"Home\"  />\n        <Tab label=\"Music Alchemy\" />\n        <Tab label=\"About US\" />\n      </Tabs>\n    \n    </Grid>\n    <Grid item xs={12} className={classes.paperContainer}   >\n\n        \n        \n            \n            <img src={titleimg} alt={\"tile\"} style={{marginTop:\"10%\"}} />\n        \n        \n    </Grid>\n    <Grid item xs = {12}   >\n        <img src={divider} alt=\"divider\" style={{height:\"90px\", width:\"400px\"}} />\n    </Grid>\n    <Grid item xs = {12}   >\n        \n            <Typography className={classes.text} variant = \"h4\" component=\"h4\" textColor=\"white\" fontfamily=\"Monospace\" >\n                Explore\n            </Typography>\n        \n    </Grid>\n    <Grid item xs = {6} style={{marginLeft:\"25%\"}} >\n    <div className={classes.root}>\n      <GridList cellHeight={180} className={classes.gridList} spacing={0} >\n        <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\n          <ListSubheader component=\"div\">December</ListSubheader>\n        </GridListTile>\n        {tileData.map((tile) => (\n          <GridListTile key={tile.img} style={{padding:\"30px\"}} >\n            <img src={tile.img} alt={tile.title} />\n            <GridListTileBar\n              title={tile.title}\n              subtitle={<span>by: {tile.author}</span>}\n              actionIcon={\n                <IconButton aria-label={`info about ${tile.title}`} className={classes.icon}>\n                  <InfoIcon />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n    </Grid>\n    <Grid item>\n      \n    </Grid>\n    \n      \n      \n\n    </Grid>\n    \n  );\n}","/home/sh1n0b1/OminusBeat/frontend/gui/src/components/tileData.js",["55"],"import bobd from './musicthumbnails/bobd.jpg';\nimport blues from './musicthumbnails/blues.jpg';\nimport classical from './musicthumbnails/classical.jpg';\nimport hiphop from './musicthumbnails/hiphop.png';\nimport metal from './musicthumbnails/metal.jpg';\nimport pop from './musicthumbnails/pop.jpeg';\nimport rap from './musicthumbnails/rap.jpg';\nimport rock from './musicthumbnails/rock.jpg';\nimport synth from './musicthumbnails/synth.jpg';\n\nconst tileData = [\n    {\n      img: blues,\n      title: 'Blues',\n      author: 'Blues music',\n    },\n    {\n      img: rock,\n      title: 'rock',\n      author: 'rock music',\n    },\n    {\n      img: synth,\n      title: 'synthwave',\n      author: 'synthwave music',\n    },\n    {\n      img: pop,\n      title: 'pop',\n      author: 'pop music',\n    },\n    {\n      img: rap,\n      title: 'rap',\n      author: 'rap music',\n    },\n    {\n      img: classical,\n      title: 'classical',\n      author: 'classical music',\n    },\n    {\n      img: hiphop,\n      title: 'hiphop',\n      author: 'hiphop music',\n    },\n    {\n      img: metal,\n      title: 'metal',\n      author: 'metalmusic',\n    },\n  ];\n\nexport default tileData;","/home/sh1n0b1/OminusBeat/frontend/gui/src/routes.js",[],"/home/sh1n0b1/OminusBeat/frontend/gui/src/components/Player.js",["56"],"import React from \"react\";\nimport \"./Player.css\";\nconst Player = props => {\n  const backgroundStyles = {\n    backgroundImage:`url(${props.item.album.images[0].url})`,\n  };\n  \n  const progressBarStyles = {\n    width: (props.progress_ms * 100 / props.item.duration_ms) + '%'\n  };\n  \n  return (\n    <div className=\"App\">\n      <div className=\"main-wrapper\">\n        <div className=\"now-playing__img\">\n          <img src={props.item.album.images[0].url} />\n        </div>\n        <div className=\"now-playing__side\">\n          <div className=\"now-playing__name\">{props.item.name}</div>\n          <div className=\"now-playing__artist\">\n            {props.item.artists[0].name}\n          </div>\n          <div className=\"now-playing__status\">\n            {props.is_playing ? \"Playing\" : \"Paused\"}\n          </div>\n          <div className=\"progress\">\n            <div\n              className=\"progress__bar\"\n              style={progressBarStyles}\n            />\n          </div>\n        </div>\n        <div className=\"background\" style={backgroundStyles} />{\" \"}\n      </div>\n    </div>\n  );\n}\n\nexport default Player;",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":1,"column":8,"nodeType":"63","messageId":"64","endLine":1,"endColumn":12},{"ruleId":"61","severity":1,"message":"65","line":5,"column":8,"nodeType":"63","messageId":"64","endLine":5,"endColumn":17},{"ruleId":"61","severity":1,"message":"66","line":6,"column":10,"nodeType":"63","messageId":"64","endLine":6,"endColumn":16},{"ruleId":"61","severity":1,"message":"67","line":8,"column":10,"nodeType":"63","messageId":"64","endLine":8,"endColumn":20},{"ruleId":"68","severity":1,"message":"69","line":88,"column":5,"nodeType":"70","messageId":"71","endLine":97,"endColumn":4},{"ruleId":"61","severity":1,"message":"72","line":2,"column":8,"nodeType":"63","messageId":"64","endLine":2,"endColumn":13},{"ruleId":"61","severity":1,"message":"73","line":20,"column":13,"nodeType":"63","messageId":"64","endLine":20,"endColumn":14},{"ruleId":"61","severity":1,"message":"74","line":21,"column":8,"nodeType":"63","messageId":"64","endLine":21,"endColumn":14},{"ruleId":"61","severity":1,"message":"75","line":22,"column":8,"nodeType":"63","messageId":"64","endLine":22,"endColumn":17},{"ruleId":"61","severity":1,"message":"76","line":78,"column":9,"nodeType":"63","messageId":"64","endLine":78,"endColumn":16},{"ruleId":"61","severity":1,"message":"77","line":1,"column":8,"nodeType":"63","messageId":"64","endLine":1,"endColumn":12},{"ruleId":"78","severity":1,"message":"79","line":16,"column":11,"nodeType":"80","endLine":16,"endColumn":55},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'MusicList' is defined but never used.","'Button' is defined but never used.","'makeStyles' is defined but never used.","no-dupe-class-members","Duplicate name 'componentDidMount'.","MethodDefinition","unexpected","'Paper' is defined but never used.","'$' is defined but never used.","'Player' is defined but never used.","'Component' is defined but never used.","'primary' is assigned a value but never used.","'bobd' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]