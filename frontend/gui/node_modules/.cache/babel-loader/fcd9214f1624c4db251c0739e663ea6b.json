{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sh1n0b1/OminusBeat/frontend/gui/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Component from 'react';\nimport Player from '../components/Player';\nimport * as $ from \"jquery\";\nimport MusicList from './containers/OminusBeatMusic';\nimport BaseRouter from './routes';\nexport const authEndpoint = 'https://accounts.spotify.com/authorize';\nconst clientId = \"556c1c2e48fd4a05a55aa7a9d0dfb6b7\";\nconst redirectUri = \"http://localhost:3000\";\nconst scopes = [\"user-read-currently-playing\", \"user-read-playback-state\"];\nconst hash = window.location.hash.substring(1).split(\"&\").reduce(function (initial, item) {\n  if (item) {\n    var parts = item.split(\"=\");\n    initial[parts[0]] = decodeURIComponent(parts[1]);\n  }\n\n  return initial;\n}, {});\nwindow.location.hash = \"\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: null,\n      item: {\n        album: {\n          images: [{\n            url: \"\"\n          }]\n        },\n        name: \"\",\n        artists: [{\n          name: \"\"\n        }],\n        duration_ms: 0\n      },\n      is_playing: \"Paused\",\n      progress_ms: 0\n    };\n    this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n  }\n\n  getCurrentlyPlaying(token) {\n    // Make a call using the token\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/player\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        this.setState({\n          item: data.item,\n          is_playing: data.is_playing,\n          progress_ms: data.progress_ms\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }, this), !this.state.token && /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"btn btn--loginApp-link\",\n          href: `${authEndpoint}client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`,\n          children: \"Login to Spotify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), this.state.token && /*#__PURE__*/_jsxDEV(Player, {\n          item: this.state.item,\n          is_playing: this.state.is_playing,\n          progress_ms: this.progress_ms\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(BaseRouter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/sh1n0b1/OminusBeat/frontend/gui/src/App.js"],"names":["BrowserRouter","Router","Component","Player","$","MusicList","BaseRouter","authEndpoint","clientId","redirectUri","scopes","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","App","constructor","state","token","album","images","url","name","artists","duration_ms","is_playing","progress_ms","getCurrentlyPlaying","bind","ajax","type","beforeSend","xhr","setRequestHeader","success","data","setState","componentDidMount","_token","access_token","render","logo","join"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport Component from 'react';\nimport Player from '../components/Player';\nimport * as $ from \"jquery\";\n\nimport MusicList from './containers/OminusBeatMusic';\nimport BaseRouter from './routes';\n\n\n\nexport const authEndpoint = 'https://accounts.spotify.com/authorize';\nconst clientId = \"556c1c2e48fd4a05a55aa7a9d0dfb6b7\";\nconst redirectUri = \"http://localhost:3000\";\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-playback-state\",\n];\n\nconst hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function(initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\n\nwindow.location.hash = \"\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: null,\n    item: {\n      album: {\n        images: [{ url: \"\" }]\n      },\n      name: \"\",\n      artists: [{ name: \"\" }],\n      duration_ms:0,\n    },\n    is_playing: \"Paused\",\n    progress_ms: 0\n  };\n  this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n  }\n  getCurrentlyPlaying(token) {\n    // Make a call using the token\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/player\",\n      type: \"GET\",\n      beforeSend: (xhr) => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: (data) => {\n        this.setState({\n          item: data.item,\n          is_playing: data.is_playing,\n          progress_ms: data.progress_ms,\n        });\n      }\n    });\n  }\n\n\n  componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token\n      });\n    }\n  }\nrender() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      {!this.state.token && (\n        <a\n          className=\"btn btn--loginApp-link\"\n          href={`${authEndpoint}client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`}\n        >\n          Login to Spotify\n        </a>\n      )}\n      {this.state.token && (\n         <Player\n          item={this.state.item}\n          is_playing={this.state.is_playing}\n          progress_ms={this.progress_ms}\n        />\n      )}\n      </header>\n      <Router>\n        <BaseRouter/>\n      </Router>\n    </div>\n  );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}