{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sh1n0b1/OminusBeat/frontend/gui/src/components/OminusBeat.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport './OminusBeat.css';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport tileData from './tileData';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    opacity: \"50%\",\n    backgroundColor: 'grey'\n  },\n  tabs_style: {\n    backgroundColor: 'grey',\n    textColor: \"white\"\n  },\n  tab_style: {\n    textColor: 'grey'\n  },\n  gridList: {\n    width: 600,\n    height: 450\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)'\n  }\n}));\nexport default function DisabledTabs() {\n  _s();\n\n  const classes = useStyles();\n  const [value, setValue] = React.useState(2);\n  const primary = grey[50];\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 10,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          value: value,\n          onChange: handleChange,\n          className: classes.tabs_style,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Home\",\n            className: classes.tab_style\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Music Alchemy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"About US\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      style: {\n        marginLeft: \"40%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: /*#__PURE__*/_jsxDEV(GridList, {\n          cellHeight: 180,\n          className: classes.gridList,\n          children: [/*#__PURE__*/_jsxDEV(GridListTile, {\n            cols: 2,\n            style: {\n              height: 'auto'\n            },\n            children: /*#__PURE__*/_jsxDEV(ListSubheader, {\n              component: \"div\",\n              children: \"December\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 11\n            }, this)\n          }, \"Subheader\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 9\n          }, this), tileData.map(tile => /*#__PURE__*/_jsxDEV(GridListTile, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: tile.img,\n              alt: tile.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n              title: tile.title,\n              subtitle: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"by: \", tile.author]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 25\n              }, this),\n              actionIcon: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": `info about ${tile.title}`,\n                className: classes.icon,\n                children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 13\n            }, this)]\n          }, tile.img, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 11\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }, this);\n}\n\n_s(DisabledTabs, \"9fIJEtVT1hBqqElCMO3SuME5hUo=\", false, function () {\n  return [useStyles];\n});\n\n_c = DisabledTabs;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisabledTabs\");","map":{"version":3,"sources":["/home/sh1n0b1/OminusBeat/frontend/gui/src/components/OminusBeat.js"],"names":["React","Paper","Tabs","Tab","Grid","makeStyles","grey","GridList","GridListTile","GridListTileBar","tileData","ListSubheader","IconButton","InfoIcon","useStyles","theme","root","display","flexWrap","justifyContent","overflow","paper","padding","spacing","textAlign","opacity","backgroundColor","tabs_style","textColor","tab_style","gridList","width","height","icon","color","DisabledTabs","classes","value","setValue","useState","primary","handleChange","event","newValue","marginLeft","map","tile","img","title","author"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport './OminusBeat.css';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport tileData from './tileData';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    \n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    opacity:\"50%\",\n    backgroundColor:'grey',\n  },\n  tabs_style: {\n      backgroundColor:'grey',\n      textColor:\"white\"\n      \n  },\n  tab_style: {\n      textColor:'grey'\n  },\n\n  gridList: {\n    width: 600,\n    height: 450,\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n\n}));\n\nexport default function DisabledTabs() {\n    const classes = useStyles();\n  const [value, setValue] = React.useState(2);\n  const primary = grey[50];\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n      <Grid container spacing = {10} >\n        <Grid item xs = {12}  >\n    <Paper className={classes.paper} >\n      <Tabs \n        value={value}\n        onChange={handleChange}\n        className={classes.tabs_style}\n        \n      >\n        <Tab label=\"Home\" className={classes.tab_style} />\n        <Tab label=\"Music Alchemy\" />\n        <Tab label=\"About US\" />\n      </Tabs>\n    </Paper>\n    </Grid>\n    <Grid item xs = {6} style={{marginLeft:\"40%\"}} >\n    <div className={classes.root}>\n      <GridList cellHeight={180} className={classes.gridList}>\n        <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\n          <ListSubheader component=\"div\">December</ListSubheader>\n        </GridListTile>\n        {tileData.map((tile) => (\n          <GridListTile key={tile.img}>\n            <img src={tile.img} alt={tile.title} />\n            <GridListTileBar\n              title={tile.title}\n              subtitle={<span>by: {tile.author}</span>}\n              actionIcon={\n                <IconButton aria-label={`info about ${tile.title}`} className={classes.icon}>\n                  <InfoIcon />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n    </Grid>\n    \n      \n      \n\n    </Grid>\n    \n  );\n}"]},"metadata":{},"sourceType":"module"}