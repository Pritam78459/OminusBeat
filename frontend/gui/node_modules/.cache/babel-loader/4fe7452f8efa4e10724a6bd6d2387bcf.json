{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sh1n0b1/OminusBeat/frontend/gui/src/containers/OminusBeatMusic.js\";\nimport React from 'react';\nimport OminusBeat from '../components/OminusBeat';\nimport axios from 'axios';\nimport Player from '../components/Player';\nconst clientId = \"556c1c2e48fd4a05a55aa7a9d0dfb6b7\";\nconst redirectUri = \"http://localhost:3000\";\nconst scopes = [\"user-read-currently-playing\", \"user-read-playback-state\"];\nconst hash = window.location.hash.substring(1).split(\"&\").reduce(function (initial, item) {\n  if (item) {\n    var parts = item.split(\"=\");\n    initial[parts[0]] = decodeURIComponent(parts[1]);\n  }\n\n  return initial;\n}, {});\nwindow.location.hash = \"\";\n\nclass MusicList extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      music: []\n    };\n    this.state = {\n      token: null,\n      item: {\n        album: {\n          images: [{\n            url: \"\"\n          }]\n        },\n        name: \"\",\n        artists: [{\n          name: \"\"\n        }],\n        duration_ms: 0\n      },\n      is_playing: \"Paused\",\n      progress_ms: 0\n    };\n    this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n  }\n\n  getCurrentlyPlaying(token) {\n    // Make a call using the token\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/player\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        this.setState({\n          item: data.item,\n          is_playing: data.is_playing,\n          progress_ms: data.progress_ms\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    axios.get('http://127.0.0.1:8000/api/').then(res => {\n      this.setState({\n        music: res.data\n      });\n      console.log(res.data);\n    });\n  }\n\n  componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!this.state.token && /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"btn btn--loginApp-link\",\n        href: `${authEndpoint}client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`,\n        children: \"Login to Spotify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), this.state.token && /*#__PURE__*/_jsxDEV(Player, {\n        item: this.state.item,\n        is_playing: this.state.is_playing,\n        progress_ms: this.progress_ms\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OminusBeat, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MusicList;","map":{"version":3,"sources":["/home/sh1n0b1/OminusBeat/frontend/gui/src/containers/OminusBeatMusic.js"],"names":["React","OminusBeat","axios","Player","clientId","redirectUri","scopes","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","MusicList","Component","constructor","state","music","token","album","images","url","name","artists","duration_ms","is_playing","progress_ms","getCurrentlyPlaying","bind","$","ajax","type","beforeSend","xhr","setRequestHeader","success","data","setState","componentDidMount","get","then","res","console","log","_token","access_token","render","authEndpoint","join"],"mappings":"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","sourcesContent":["import React from 'react';\nimport OminusBeat from '../components/OminusBeat';\nimport axios from 'axios';\nimport Player from '../components/Player';\n\n\nconst clientId = \"556c1c2e48fd4a05a55aa7a9d0dfb6b7\";\nconst redirectUri = \"http://localhost:3000\";\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-playback-state\",\n];\n\nconst hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function(initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\nwindow.location.hash = \"\";\n\n\nclass MusicList extends React.Component {\n\n     constructor() {\n    super();\n    this.state = {\n      token: null,\n    item: {\n      album: {\n        images: [{ url: \"\" }]\n      },\n      name: \"\",\n      artists: [{ name: \"\" }],\n      duration_ms:0,\n    },\n    is_playing: \"Paused\",\n    progress_ms: 0\n  };\n  this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n  }\n  getCurrentlyPlaying(token) {\n    // Make a call using the token\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/player\",\n      type: \"GET\",\n      beforeSend: (xhr) => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: (data) => {\n        this.setState({\n          item: data.item,\n          is_playing: data.is_playing,\n          progress_ms: data.progress_ms,\n        });\n      }\n    });\n  }\n\n    \n\n\n    state = {\n        music: []\n    }\n\n    componentDidMount() {\n        axios.get('http://127.0.0.1:8000/api/')\n        .then(res => {\n            this.setState({\n                music: res.data\n            });\n            console.log(res.data)\n        })\n    };\n\n    componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token\n      });\n    }\n  }\n    \n\n\n\n    render() {\n        return (\n            <div>\n                 {!this.state.token && (\n        <a\n          className=\"btn btn--loginApp-link\"\n          href={`${authEndpoint}client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`}\n        >\n          Login to Spotify\n        </a>\n      )}\n      {this.state.token && (\n        <Player\n          item={this.state.item}\n          is_playing={this.state.is_playing}\n          progress_ms={this.progress_ms}\n        />\n      )}\n            \n            <OminusBeat/>\n            </div>\n        )        \n    }\n}\n\nexport default MusicList;"]},"metadata":{},"sourceType":"module"}