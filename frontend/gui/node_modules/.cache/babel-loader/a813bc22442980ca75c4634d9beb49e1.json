{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/craniax/OminusBeat/frontend/gui/src/components/ExploreTile.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport tileData from './tileData';\nimport { Link } from 'react-router-dom';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden'\n  },\n  gridList: {\n    width: 700,\n    height: \"100%\"\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)'\n  },\n  titlecolor: {\n    color: \"white\",\n    fontSize: 20\n  }\n}));\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\n\nexport default function GenereTile() {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(GridList, {\n      cellHeight: 180,\n      className: classes.gridList,\n      spacing: 50,\n      children: [/*#__PURE__*/_jsxDEV(GridListTile, {\n        cols: 2,\n        style: {\n          height: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(ListSubheader, {\n          className: classes.titlecolor,\n          component: \"div\",\n          children: \"Generes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, \"Subheader\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), tileData.map(tile => /*#__PURE__*/_jsxDEV(GridListTile, {\n        to: tile.link,\n        component: Link,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: tile.img,\n          alt: tile.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n          title: tile.title,\n          subtitle: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"by: \", tile.author]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this),\n          actionIcon: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": `info about ${tile.title}`,\n            className: classes.icon,\n            children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, tile.img, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GenereTile, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = GenereTile;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenereTile\");","map":{"version":3,"sources":["/home/craniax/OminusBeat/frontend/gui/src/components/ExploreTile.js"],"names":["React","makeStyles","GridList","GridListTile","GridListTileBar","ListSubheader","IconButton","InfoIcon","tileData","Link","useStyles","theme","root","display","flexWrap","justifyContent","overflow","gridList","width","height","icon","color","titlecolor","fontSize","GenereTile","classes","map","tile","link","img","title","author"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport tileData from './tileData';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    \n  },\n  gridList: {\n    width: 700,\n    height: \"100%\",\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n  titlecolor :{\n      color:\"white\",\n      fontSize:20\n  }\n}));\n\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\nexport default function GenereTile() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <GridList cellHeight={180} className={classes.gridList} spacing={50} >\n        <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\n          <ListSubheader className={classes.titlecolor} component=\"div\">Generes</ListSubheader>\n        </GridListTile>\n        {tileData.map((tile) => (\n          <GridListTile to={tile.link} component={Link}  key={tile.img}>\n            <img src={tile.img} alt={tile.title} />\n            <GridListTileBar\n              title={tile.title}\n              subtitle={<span>by: {tile.author}</span>}\n              actionIcon={\n                <IconButton aria-label={`info about ${tile.title}`} className={classes.icon}>\n                  <InfoIcon />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}